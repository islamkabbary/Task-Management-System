{
    "openapi": "3.0.0",
    "info": {
        "title": "Task Management System API",
        "description": "API for managing tasks in SOFTXPERT platform",
        "contact": {
            "name": "Islam Kabbary",
            "url": "https://www.linkedin.com/in/islam-kabbary-2b35a814b",
            "email": "islamkabbary@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Base URL for Task Management System"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Authenticate user using email and password.",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "oneOf": [
                                            {
                                                "type": "string",
                                                "format": "email",
                                                "example": "user@gmail.com"
                                            },
                                            {
                                                "type": "string",
                                                "format": "email",
                                                "example": "manager@gmail.com"
                                            }
                                        ]
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User logged in successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Manager"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "manager@gmail.com"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "manager"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-30 16:46:09"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-30 16:46:09"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "data": {
                                            "properties": {
                                                "errors": {
                                                    "properties": {
                                                        "email": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "The email field is required."
                                                            }
                                                        },
                                                        "password": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "The password field is required."
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logout and revoke token",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all tasks",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by task status (e.g., pending, in_progress, completed)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assignee_id",
                        "in": "query",
                        "description": "Filter by user assigned to task",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "due_date_from",
                        "in": "query",
                        "description": "Filter tasks with due date from this date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-06-01"
                        }
                    },
                    {
                        "name": "due_date_to",
                        "in": "query",
                        "description": "Filter tasks with due date up to this date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-06-30"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "9b481c0ed5fdfa1a592d70ba39a348ee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "assignee_id",
                                    "due_date"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Task Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Task description"
                                    },
                                    "assignee_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-10"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "pending"
                                    },
                                    "dependency_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaskSchema"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get task details",
                "operationId": "fd3677b5b24695d7b801715869b1357c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SingleTaskResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update an existing task",
                "operationId": "85377ff0e935f093dd75ea6886923dbc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Task Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "in_progress"
                                    },
                                    "assignee_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-15"
                                    },
                                    "dependency_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaskSchema"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AssigneeSchema": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "User"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@gmail.com"
                    },
                    "role": {
                        "type": "string",
                        "example": "user"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2025-05-30 16:46:08"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2025-05-30 16:46:08"
                    }
                },
                "type": "object"
            },
            "TaskSchema": {
                "title": "Task",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Task Title"
                    },
                    "description": {
                        "type": "string",
                        "example": "Task description"
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-06-15"
                    },
                    "assignee": {
                        "$ref": "#/components/schemas/AssigneeSchema"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2025-05-30 16:46:26"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2025-05-30 16:46:26"
                    }
                },
                "type": "object"
            },
            "TaskListResponse": {
                "properties": {
                    "status": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskSchema"
                        }
                    },
                    "message": {
                        "type": "string",
                        "example": "Tasks retrieved successfully."
                    },
                    "pagination": {
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "SingleTaskResponse": {
                "properties": {
                    "status": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#/components/schemas/TaskSchema"
                    },
                    "message": {
                        "type": "string",
                        "example": "Task details retrieved successfully."
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Tasks",
            "description": "Tasks"
        }
    ]
}